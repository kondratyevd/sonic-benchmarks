name: Perf Analyzer tests

on:
  workflow_dispatch:
  push:
    branches:
    - master
jobs:
  perf-analyzer-job:
    runs-on: ubuntu-latest
    container:
      image: fastml/triton-torchgeo:21.02-py3-geometric
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Start Triton server
        run: tritonserver --model-store=models

      - name: Run perf_analyzer
        uses: nvcr.io/nvidia/tritonserver:21.10-py3-sdk
        with:
          args: /bin/bash -c ${{ env.commands_file }} | tee ${{ env.out_file }}
        env:
          commands_file: tests/test_perf_analyzer.sh
          out_file: perf-analyzer-output.txt

      #- name: Start Triton Server
      #  env:
      #    docker_image: fastml/triton-torchgeo:21.02-py3-geometric
      #  run: |
      #    docker run -d --rm -p 8000:8000 -p 8001:8001 -p 8002:8002 \
      #    -v $PWD/models:/models ${{ env.docker_image }} tritonserver --model-store=/models

      #- name: Run Perf Analyzer
      #  env:
      #    docker_image: nvcr.io/nvidia/tritonserver:21.10-py3-sdk
      #    commands_file: tests/test_perf_analyzer.sh
      #    out_file: perf-analyzer-output.txt
      #  run: |
      #    docker run -d --rm ${{ env.docker_image }} /bin/bash -c ${{ env.commands_file }} | tee ${{ env.out_file }} 

      #- name: Stop Triton Server
      #  env:
      #    docker_image: fastml/triton-torchgeo:21.02-py3-geometric
      #  run: docker stop $(docker ps -q --filter ancestor=${{ env.docker_image }})
